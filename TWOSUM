vector<int> twoSum(vector<int>v, int target) {
        int n=v.size();
        vector<int>vi=v;
        sort(v.begin(),v.end());
        vector<int>vec;
        int hi=n-1;
        int lo=0;
        while(lo<hi){
            int curr=v[lo]+v[hi];
            if(curr==target){
                int lo_pos= find(vi.begin(),vi.end(),v[lo])-vi.begin();
                int hi_pos= find(vi.begin(),vi.end(),v[hi])-vi.begin();
              if(lo_pos==hi_pos){
                hi_pos= find(vi.rbegin(),vi.rend(),v[hi])-vi.rbegin();
              }
                vec.push_back(lo_pos);
                vec.push_back(hi_pos);
                return vec;
            }
            else if(curr<target){
                lo++;
            }
            else {
                hi--;
            }
        }
        return vec;
    }
